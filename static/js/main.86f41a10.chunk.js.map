{"version":3,"sources":["helper/constants.js","helper/convertItemToFeature.js","Menu.js","helper/LogSelectedFeature.js","Umweltzonenlayer.js","helper/filterFunction.js","helper/getGazData.js","helper/titleFactory.js","SecondaryInfo.js","App.js","reportWebVitals.js","index.js"],"names":["host","LOOKUP","abgebaut","color","signature","header","title","filterTitle","inaktiv","unauffaellig","auffaellig","warnend","unknown","MONTHS","hasValues","item","values","werte","undefined","JSON","stringify","getLastMeasurement","lym","getLastYearMeasurements","lymValues","year","length","value","monthIndex","getLastYear","sortedkeys","Object","keys","sort","getLastYearM1","ly","getLastYearMinus1Measurements","lym1","getWeightedAverage","measurments","getActivityStatus","bis","getStatus","getSignature","status","getAdditionalInfo","lastYearAverage","lastYear","lastYearM1Average","lastYearM1","ret","getTitle","lm","demontage","Date","getMonth","getFullYear","convertItemToFeature","itemIn","a","addSVGToProps","i","text","strasse","hausnummer","zusatzinfo","geometry","geojson","info","additionalInfo","subtitle","foto","type","selected","crs","properties","name","MyMenu","setAppMenuActiveMenuSection","useContext","UIDispatchContext","FeatureCollectionContext","filterState","filteredItems","filterMode","shownFeatures","FeatureCollectionDispatchContext","setFilterState","kategorien","setFilterMode","items","themen","filterConfiguration","mode","resetedFilter","stations","filters","key","indent","icon","iconPos","setAll","setNone","colorizer","ModalApplicationMenu","menuIcon","menuTitle","menuIntroduction","className","to","containerId","smooth","delay","onClick","menuSections","Section","sectionKey","sectionTitle","term","count","getFilterHeader","sectionBsStyle","sectionContent","FilterPanel","DefaultSettingsPanel","ConfigurableDocBlocks","configs","getSimpleHelpForTM","LogSelection","selectedFeature","console","log","getUWZ","setUWZ","md5FetchJSON","uwz","UWZ","useState","location","TopicMapContext","useEffect","featureCollection","style","feature","weight","opacity","fillColor","fillOpacity","labeler","zoom","textShadow","featureClickHandler","itemFilterFunction","includes","getGazData","setGazData","prefix","sources","md5FetchText","adressen","bezirke","quartiere","pois","kitas","no2","gazData","getGazDataForTopicIds","factory","featureCollectionContext","filterDescription","stationsArten","parts","art","push","slice","join","ReactChartkick","addAdapter","Chart","InfoPanel","station","minHeight4MainSextion","last12","valueCounter","outageCounter","avgs","last12LineChartData","avgsLineChartData","yearValues","Math","min","lastYearValues","lastYearM1Values","pop","twoYearVals","index","max","years","firstNElementsToDestroy","deleteCounter","entry","subSections","SecondaryInfoPanelSection","bsStyle","fontSize","padding","paddingTop","data","SecondaryInfo","titleIconName","mainSection","width","minHeight","alt","paddingLeft","paddingRight","float","paddingBottom","src","von","toLocaleDateString","round","App","document","TopicMapContextProvider","appKey","featureItemsURL","getFeatureStyler","getGTMFeatureStyler","featureTooltipFunction","clusteringOptions","iconCreateFunction","getClusterIconCreatorFunction","props","additionalLayerConfiguration","initialActive","layer","titleFactory","classKeyFunction","getColorFromProperties","TopicMapComponent","locatorControl","modalMenu","gazetteerSearchPlaceholder","infoBox","GenericInfoBoxFromFeature","pixelwidth","config","displaySecondaryInfoAction","city","navigator","noun","singular","plural","noCurrentFeatureTitle","noCurrentFeatureContent","secondaryInfo","ContactButton","action","link","createElement","setAttribute","br","mailToHref","encodeURI","window","href","replace","body","appendChild","click","FeatureCollection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.86f41a10.chunk.js","sourcesContent":["export const host = \"https://wupp-topicmaps-data.cismet.de\";\n\nexport const LOOKUP = {\n  abgebaut: {\n    color: \"#9DBCCC\",\n    signature: \"Luft_Icon_Messstation_abgebaut_farbig.svg\",\n    header: \"Messstation für NO₂ (inaktiv, demontiert)\",\n    title: \"abgebaut\",\n    filterTitle: \"abgebaute\",\n  },\n  inaktiv: {\n    color: \"#4FAFC5\",\n    signature: \"Luft_Icon_Messstation_deaktiv_farbig.svg\",\n    header: \"Messstation für NO₂ (aktiv, aktuell Messausfall)\",\n    title: \"inaktiv\",\n    filterTitle: \"inaktive\",\n  },\n  unauffaellig: {\n    color: \"#9ACD32\",\n    signature: \"Luft_Icon_Messstation_unauffaellig_farbig.svg\",\n    header: \"Messstation für NO₂ (aktiv, unauffällig)\",\n    title: \"unauffällig\",\n    filterTitle: \"unauffällige\",\n  },\n  auffaellig: {\n    color: \"#FFA500\",\n    signature: \"Luft_Icon_Messstation_auffaellig_farbig.svg\",\n    header: \"Messstation für NO₂ (aktiv, auffällig)\",\n    title: \"auffällig\",\n    filterTitle: \"auffällige\",\n  },\n  warnend: {\n    color: \"#E01414\",\n    signature: \"Luft_Icon_Messstation_warnend_farbig.svg\",\n    header: \"Messstation für NO₂ (aktiv, warnend)\",\n    title: \"warnend\",\n    filterTitle: \"warnende\",\n  },\n  unknown: { color: \"#eeeeee\", signature: \"Platz.svg\", header: \"Fehler\" },\n};\n\nexport const MONTHS = [\n  \"Januar\",\n  \"Februar\",\n  \"März\",\n  \"April\",\n  \"Mai\",\n  \"Juni\",\n  \"Juli\",\n  \"August\",\n  \"September\",\n  \"Oktober\",\n  \"November\",\n  \"Dezember\",\n];\n","import { addSVGToProps } from \"react-cismap/tools/svgHelper\";\n\nimport { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport { LOOKUP, MONTHS } from \"./constants\";\n\nconst hasValues = (item) => {\n  const values = item?.werte;\n  return values !== undefined && JSON.stringify(values) !== \"{}\";\n};\n\nconst getLastMeasurement = (item) => {\n  const lym = getLastYearMeasurements(item);\n\n  if (lym) {\n    const { values: lymValues, year } = lym;\n    if (lymValues.length === 13) {\n      return { value: lymValues[11], monthIndex: 11, year };\n    } else {\n      return { value: lymValues[lymValues.length - 1], monthIndex: lymValues.length - 1, year };\n    }\n  }\n};\nconst getLastYear = (item) => {\n  if (hasValues(item)) {\n    const values = item?.werte;\n    const sortedkeys = Object.keys(values).sort();\n    return sortedkeys[sortedkeys.length - 1];\n  }\n};\nconst getLastYearM1 = (item) => {\n  if (hasValues(item)) {\n    const values = item?.werte;\n    const sortedkeys = Object.keys(values).sort();\n    if (sortedkeys.length > 1) {\n      return sortedkeys[sortedkeys.length - 2];\n    }\n  }\n};\n\nexport const getLastYearMeasurements = (item) => {\n  const ly = getLastYear(item);\n  const values = item?.werte;\n  if (ly) {\n    return { values: values[ly], year: ly };\n  }\n};\nexport const getLastYearMinus1Measurements = (item) => {\n  const lym1 = getLastYearM1(item);\n  const values = item?.werte;\n  if (lym1) {\n    return values[lym1];\n  }\n};\n\nconst getWeightedAverage = (measurments) => {\n  if (measurments && measurments.length === 13) {\n    return measurments[12];\n  }\n};\nconst getActivityStatus = (item) => {\n  if (item?.bis !== undefined) {\n    return \"abgebaut\";\n  } else {\n    return \"aktiv\";\n  }\n  //todo inaktiv\n};\n\n// unauffällig 1-35 (einschließlich) µg/m³ Grün\n// auffällig 36-40 (einschließlich) µg/m³ Orange\n// warnend >40 µg/m³ Rot\nexport const getStatus = (item) => {\n  if (getActivityStatus(item) === \"aktiv\") {\n    const lym = getLastMeasurement(item)?.value;\n\n    if (lym > 0 && lym <= 35) {\n      return \"unauffaellig\";\n    } else if (lym > 35 && lym <= 40) {\n      return \"auffaellig\";\n    } else if (lym > 40) {\n      return \"warnend\";\n    } else if (lym === 9999) {\n      return \"inaktiv\";\n    } else {\n      return \"unknown\";\n    }\n  } else {\n    return getActivityStatus(item);\n  }\n};\n\nconst getSignature = (item) => {\n  const status = getStatus(item);\n  return LOOKUP[status].signature;\n};\n\nconst getAdditionalInfo = (item) => {\n  const lastYearAverage = getWeightedAverage(getLastYearMeasurements(item)?.values);\n  const lastYear = getLastYear(item);\n  const lastYearM1Average = getWeightedAverage(getLastYearMinus1Measurements(item));\n  const lastYearM1 = getLastYearM1(item);\n\n  let ret = \"\";\n  if (lastYearAverage || lastYearM1Average) {\n    ret = \"gewichtete Jahresmittelwerte:\";\n    if (lastYearAverage) {\n      ret = ret + \"\\n\" + lastYearAverage + \" µg/m³ (\" + lastYear + \")\";\n    }\n    if (lastYearM1Average) {\n      ret = ret + \"\\n\" + lastYearM1Average + \" µg/m³ (\" + lastYearM1 + \")\";\n    }\n  }\n\n  return ret;\n};\n\nconst getTitle = (item) => {\n  const lm = getLastMeasurement(item);\n\n  if (item?.bis) {\n    const demontage = new Date(item?.bis);\n\n    return `Diese Messstation ist seit ${\n      MONTHS[demontage.getMonth() - 1]\n    } ${demontage.getFullYear()} abmontiert.`;\n  } else {\n    if (lm) {\n      if (lm.value !== 9999) {\n        return lm.value + \" µg/m³ (\" + MONTHS[lm.monthIndex] + \" \" + lm.year + \")\";\n      } else {\n        return (\n          \"Für \" +\n          MONTHS[lm.monthIndex] +\n          \" \" +\n          lm.year +\n          \"liefert diese Messstation keinen Messwert\"\n        );\n      }\n    } else {\n      return \"Diese Messstation ist abmontiert\";\n    }\n  }\n};\n\nconst convertItemToFeature = async (itemIn) => {\n  //   console.log(\"itemIn\", itemIn);\n\n  let item = await addSVGToProps(itemIn, (i) => \"luft/\" + getSignature(i));\n  item.status = getStatus(item);\n  const text =\n    item?.strasse +\n    \" \" +\n    (item?.hausnummer || \"\") +\n    (item?.zusatzinfo !== undefined ? \" (\" + item?.zusatzinfo + \")\" : \"\");\n\n  const type = \"Feature\";\n  const selected = false;\n  const geometry = item?.geojson;\n  item.color = LOOKUP[item.status].color;\n  const info = {\n    header: LOOKUP[item.status].header,\n    title: getTitle(item),\n    additionalInfo: getAdditionalInfo(item),\n    subtitle: (\n      <span>\n        {item?.strasse} {item?.hausnummer} {item?.zusatzinfo && <span>({item?.zusatzinfo})</span>}\n      </span>\n    ),\n  };\n  item.info = info;\n  item.foto = \"https://www.wuppertal.de/geoportal/luftmessstationen/fotos/NO2_test.jpg\";\n  return {\n    text,\n    type,\n    selected,\n    geometry,\n    crs: {\n      type: \"name\",\n      properties: {\n        name: \"urn:ogc:def:crs:EPSG::25832\",\n      },\n    },\n    properties: item,\n  };\n};\nexport default convertItemToFeature;\n","import { useContext } from \"react\";\nimport {\n  FeatureCollectionContext,\n  FeatureCollectionDispatchContext,\n} from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getSimpleHelpForTM } from \"react-cismap/tools/uiHelper\";\nimport { Link } from \"react-scroll\";\nimport ModalApplicationMenu from \"react-cismap/topicmaps/menu/ModalApplicationMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport FilterPanel from \"react-cismap/topicmaps/menu/FilterPanel\";\nimport DefaultSettingsPanel from \"react-cismap/topicmaps/menu/DefaultSettingsPanel\";\nimport ConfigurableDocBlocks from \"react-cismap/topicmaps/ConfigurableDocBlocks\";\nimport { LOOKUP } from \"./helper/constants\";\nconst MyMenu = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  const { filterState, filterMode, filteredItems, shownFeatures } = useContext(\n    FeatureCollectionContext\n  );\n  const { setFilterState, setFilterMode } = useContext(FeatureCollectionDispatchContext);\n\n  const { items } = useContext(FeatureCollectionContext);\n\n  const kategorien = [];\n  const katValues = [];\n  const themen = [];\n  const themenValues = [];\n  const topicMapTitle = \"Luftmessstationskarte Wuppertal\";\n\n  const getFilterHeader = () => {\n    const count = filteredItems?.length || 0;\n\n    let term;\n    if (count === 1) {\n      term = \"Standort\";\n    } else {\n      term = \"Standorte\";\n    }\n\n    return `Messstationen der Luftqualität (${count} ${term} gefunden, davon ${\n      shownFeatures?.length || \"0\"\n    } in der Karte)`;\n  };\n\n  const filterConfiguration = {\n    mode: \"list\", // list or tabs\n    resetedFilter: {\n      stations: [\"unauffaellig\", \"auffaellig\", \"warnend\", \"inaktiv\", \"abgebaut\"],\n    },\n    filterMode: \"gibtnureinen\",\n    filters: [\n      {\n        title: \"aktive Messstationen\",\n        key: \"stations\",\n        type: \"checkBoxes\",\n        values: [\n          {\n            keys: [\"unauffaellig\", \"auffaellig\", \"warnend\", \"inaktiv\"],\n            title: \"alle aktiven Stationen\",\n          },\n          {\n            key: \"unauffaellig\",\n            indent: 30,\n            title: \"nur unauffällige Stationen\",\n            color: LOOKUP.unauffaellig.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n          {\n            key: \"auffaellig\",\n            indent: 30,\n            title: \"nur auffällige Stationen\",\n            color: LOOKUP.auffaellig.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n          {\n            key: \"warnend\",\n            indent: 30,\n            title: \"nur warnende Stationen\",\n            color: LOOKUP.warnend.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n          {\n            key: \"inaktiv\",\n            indent: 30,\n            title: \"nur Stationen mit Messausfall\",\n            color: LOOKUP.inaktiv.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n        ],\n        setAll: () => {\n          setFilterState({ ...filterState, themen });\n        },\n        setNone: () => {\n          setFilterState({ ...filterState, themen: [] });\n        },\n        colorizer: (item, selected) => (selected ? item.color : \"#eeeeee\"),\n      },\n      {\n        title: \"inaktive Messstationen\",\n        key: \"stations\",\n        type: \"checkBoxes\",\n        values: [\n          {\n            key: \"abgebaut\",\n            title: \"inaktive Stationen\",\n            color: LOOKUP.inaktiv.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n        ],\n        setAll: () => {\n          setFilterState({ ...filterState, kategorien });\n        },\n        setNone: () => {\n          setFilterState({ ...filterState, kategorien: [] });\n        },\n      },\n    ],\n  };\n  const simpleHelp = undefined;\n\n  return (\n    <ModalApplicationMenu\n      menuIcon={\"bars\"}\n      menuTitle={\"Filter, Einstellungen und Kompaktanleitung\"}\n      menuIntroduction={\n        <span>\n          Benutzen Sie die Auswahlmöglichkeiten unter{\" \"}\n          <Link\n            className='useAClassNameToRenderProperLink'\n            to='filter'\n            containerId='myMenu'\n            smooth={true}\n            delay={100}\n            onClick={() => setAppMenuActiveMenuSection(\"filter\")}\n          >\n            Filter\n          </Link>\n          , um die in der Karte angezeigten vorbildlichen Luftmessstationen für Stickstoffdioxid\n          (NO₂) auf die für Sie relevanten Stationen zu beschränken. Über{\" \"}\n          <Link\n            className='useAClassNameToRenderProperLink'\n            to='settings'\n            containerId='myMenu'\n            smooth={true}\n            delay={100}\n            onClick={() => setAppMenuActiveMenuSection(\"settings\")}\n          >\n            Einstellungen\n          </Link>{\" \"}\n          können Sie die Darstellung der Hintergrundkarte und der Stationen an Ihre Vorlieben\n          anpassen. Wählen Sie die{\" \"}\n          <Link\n            className='useAClassNameToRenderProperLink'\n            to='help'\n            containerId='myMenu'\n            smooth={true}\n            delay={100}\n            onClick={() => setAppMenuActiveMenuSection(\"help\")}\n          >\n            Kompaktanleitung\n          </Link>{\" \"}\n          für detailliertere Bedienungsinformationen.\n        </span>\n      }\n      menuSections={[\n        <Section\n          key='filter'\n          sectionKey='filter'\n          sectionTitle={getFilterHeader()}\n          sectionBsStyle='primary'\n          sectionContent={<FilterPanel filterConfiguration={filterConfiguration} />}\n        />,\n        <DefaultSettingsPanel key='settings' />,\n        <Section\n          key='help'\n          sectionKey='help'\n          sectionTitle='Kompaktanleitung'\n          sectionBsStyle='default'\n          sectionContent={\n            <ConfigurableDocBlocks configs={getSimpleHelpForTM(topicMapTitle, simpleHelp)} />\n          }\n        />,\n      ]}\n    />\n  );\n};\nexport default MyMenu;\n","import { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\n\nconst LogSelection = () => {\n  const { selectedFeature } = useContext(FeatureCollectionContext);\n  console.log(\"selectedFeature.properties\", selectedFeature?.properties);\n\n  return <div></div>;\n};\n\nexport default LogSelection;\n","import { FeatureCollectionDisplayWithTooltipLabels } from \"react-cismap\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { TopicMapContext } from \"react-cismap/contexts/TopicMapContextProvider\";\nimport { md5FetchJSON } from \"react-cismap/tools/fetching\";\nimport { host } from \"./helper/constants\";\n\nconst getUWZ = async (setUWZ) => {\n  const uwz = await md5FetchJSON(\"MapData\", host + \"/data/umweltzonen.json\");\n  setUWZ(uwz);\n};\n\nconst UWZ = () => {\n  const [uwz, setUWZ] = useState([]);\n  const { location } = useContext(TopicMapContext);\n  useEffect(() => {\n    getUWZ(setUWZ);\n  }, []);\n\n  return (\n    <FeatureCollectionDisplayWithTooltipLabels\n      key={\"ds\"}\n      featureCollection={uwz}\n      style={(feature) => {\n        const style = {\n          color: \"#155317\",\n          weight: 3,\n          opacity: 0.5,\n          fillColor: \"#155317\",\n          fillOpacity: 0.15,\n        };\n        return style;\n      }}\n      labeler={(feature) => {\n        const currentZoom = location?.zoom || 8;\n        if (currentZoom > 7) {\n          return (\n            <h3\n              style={{\n                color: \"#155317\",\n                opacity: 0.7,\n                textShadow:\n                  \"1px 1px 0px  #000000,-1px 1px 0px  #000000, 1px -1px 0px  #000000, -1px -1px 0px  #000000, 2px 2px 15px #000000\",\n              }}\n            >\n              Umweltzone\n            </h3>\n          );\n        }\n      }}\n      featureClickHandler={() => {}}\n    />\n  );\n};\nexport default UWZ;\n","import { getStatus } from \"./convertItemToFeature\";\n\nconst itemFilterFunction = ({ filterState }) => {\n  return (item) => {\n    return filterState?.stations?.includes(getStatus(item));\n  };\n};\nexport default itemFilterFunction;\n","import { md5FetchText } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\nimport { host } from \"./constants\";\n\nexport const getGazData = async (setGazData) => {\n  const prefix = \"GazData\";\n  const sources = {};\n\n  sources.adressen = await md5FetchText(prefix, host + \"/data/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, host + \"/data/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, host + \"/data/quartiere.json\");\n  sources.pois = await md5FetchText(prefix, host + \"/data/pois.json\");\n  sources.kitas = await md5FetchText(prefix, host + \"/data/kitas.json\");\n  sources.no2 = await md5FetchText(prefix, host + \"/data/no2.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"no2\",\n    \"pois\",\n    \"kitas\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setGazData(gazData);\n};\n","import { LOOKUP } from \"./constants\";\nconst factory = ({ featureCollectionContext }) => {\n  const getThemaById = (id) => {\n    const result = featureCollectionContext?.items?.find((item) => item?.thema?.id === id);\n    return result?.thema?.name;\n  };\n  console.log(\"featureCollectionContext?.filterState?\", featureCollectionContext?.filterState);\n\n  let filterDescription = \"?\";\n  if (featureCollectionContext?.filteredItems?.length === featureCollectionContext?.items?.length) {\n    filterDescription = undefined;\n  } else {\n    const stationsArten = featureCollectionContext?.filterState?.stations;\n\n    if (\n      stationsArten.includes(\"unauffaellig\") &&\n      stationsArten.includes(\"auffaellig\") &&\n      stationsArten.includes(\"warnend\") &&\n      stationsArten.includes(\"inaktiv\")\n    ) {\n      filterDescription = \"nur aktive Messstationen\";\n    } else if (stationsArten.length === 1) {\n      filterDescription = `nur ${LOOKUP[stationsArten[0]].filterTitle} Messstationen`;\n    } else {\n      const parts = [];\n      for (const art of stationsArten) {\n        parts.push(LOOKUP[art].filterTitle);\n      }\n\n      filterDescription = `nur ${parts.slice(0, parts.length - 1).join(\", \")} und ${\n        parts[parts.length - 1]\n      } Messstationen`;\n    }\n  }\n\n  // if (featureCollectionContext?.filteredItems?.length === 0) {\n  //   return (\n  //     <div>\n  //       <b>Keine Luftmessstationen gefunden!</b> Bitte überprüfen Sie Ihre Filtereinstellungen.\n  //     </div>\n  //   );\n  // }\n\n  if (filterDescription) {\n    return (\n      <div>\n        <b>Meine Messstationen der Luftqualität:</b> {filterDescription}\n      </div>\n    );\n  } else {\n    return undefined;\n  }\n};\n\nexport default factory;\n","import React, { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport SecondaryInfoPanelSection from \"react-cismap/topicmaps/SecondaryInfoPanelSection\";\nimport SecondaryInfo from \"react-cismap/topicmaps/SecondaryInfo\";\nimport {\n  getLastYearMeasurements,\n  getLastYearMinus1Measurements,\n} from \"./helper/convertItemToFeature\";\nimport Chart from \"chart.js\";\nimport ReactChartkick, { LineChart } from \"react-chartkick\";\nimport { MONTHS } from \"./helper/constants\";\nReactChartkick.addAdapter(Chart);\n\nconst InfoPanel = () => {\n  const { selectedFeature, items } = useContext(FeatureCollectionContext);\n\n  const station = selectedFeature?.properties;\n\n  if (station !== undefined) {\n    let foto = station?.foto;\n\n    let minHeight4MainSextion = undefined;\n    if (foto !== undefined) {\n      minHeight4MainSextion = 250;\n    }\n\n    // --- value and outage counter and avg of the last 10 years\n    let valueCounter = 0;\n    let outageCounter = 0;\n    const avgs = {};\n    const last12LineChartData = [];\n    const avgsLineChartData = [];\n\n    for (const year of Object.keys(station.werte)) {\n      const yearValues = station.werte[year];\n      for (let i = 0; i < Math.min(yearValues.length, 12); ++i) {\n        if (yearValues[i] === -9999) {\n          outageCounter++;\n        } else {\n          valueCounter++;\n        }\n      }\n      if (yearValues.length === 13) {\n        avgs[year] = yearValues[12];\n      }\n    }\n\n    let last12;\n\n    if (station?.werte && Object.keys(station?.werte).length > 0) {\n      // --- measurements of the last 12 months\n      let { values: lastYearValues, year: lastYear } = getLastYearMeasurements(station);\n      let lastYearM1Values = getLastYearMinus1Measurements(station);\n\n      //remove average\n      if (lastYearValues?.length === 13) {\n        lastYearValues = [...lastYearValues]; // spread op bc original is immutable\n        lastYearValues.pop();\n      }\n      if (lastYearM1Values?.length === 13) {\n        lastYearM1Values = [...lastYearM1Values]; // spread op bc original is immutable\n        lastYearM1Values.pop();\n      }\n\n      let twoYearVals = [];\n      if (lastYearM1Values) {\n        let index = 0;\n        for (const value of lastYearM1Values) {\n          twoYearVals.push({ year: lastYear - 1, index, value });\n          index++;\n        }\n      }\n      if (lastYearValues) {\n        let index = 0;\n        for (const value of lastYearValues) {\n          twoYearVals.push({ year: lastYear, index, value });\n          index++;\n        }\n      }\n\n      last12 = twoYearVals.slice(Math.max(twoYearVals.length - 12, 0));\n\n      // --- avg of the last 10 years means delete the first n values\n      //     where n=count of keys in werte-10\n      const years = Object.keys(station.werte);\n      const firstNElementsToDestroy = years.length - 10;\n      let deleteCounter = 0;\n      for (const year of years) {\n        if (deleteCounter < firstNElementsToDestroy) {\n          delete avgs[year];\n          deleteCounter++;\n        }\n      }\n\n      // ---create the chart objects\n\n      for (const entry of last12) {\n        const key = MONTHS[entry.index] + entry.year;\n        if (entry.value !== -9999) {\n          last12LineChartData.push([key, entry.value]);\n        }\n      }\n\n      for (const year of Object.keys(avgs)) {\n        avgsLineChartData.push([year, avgs[year]]);\n      }\n    }\n\n    const subSections = [\n      <SecondaryInfoPanelSection\n        key='last12'\n        bsStyle='info'\n        header={\"NO₂-Messwerte der letzten 12 Monate\"}\n      >\n        <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n          <LineChart data={last12LineChartData} />\n          {/* <pre>{JSON.stringify(last12LineChartData, null, 2)}</pre> */}\n        </div>\n      </SecondaryInfoPanelSection>,\n      <SecondaryInfoPanelSection\n        key='average10'\n        bsStyle='warning'\n        header={\"NO₂-Jahresmittelwerte der letzten zehn Kalenderjahre\"}\n      >\n        <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n          <LineChart data={avgsLineChartData} />\n\n          {/* <pre>{JSON.stringify(avgs, null, 2)}</pre> */}\n        </div>\n      </SecondaryInfoPanelSection>,\n      <SecondaryInfoPanelSection\n        key='last12'\n        bsStyle='default'\n        header={\"NO₂-Messwerte der letzten 12 Monate\"}\n      >\n        <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n          <pre>{JSON.stringify(last12LineChartData, null, 2)}</pre>\n        </div>\n      </SecondaryInfoPanelSection>,\n      <SecondaryInfoPanelSection\n        key='average10'\n        bsStyle='default'\n        header={\"NO₂-Jahresmittelwerte der letzten zehn Kalenderjahre\"}\n      >\n        <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n          <pre>{JSON.stringify(avgs, null, 2)}</pre>\n        </div>\n      </SecondaryInfoPanelSection>,\n    ];\n\n    return (\n      <SecondaryInfo\n        titleIconName='info-circle'\n        title={\"Datenblatt: Messstation für Stickstoffdioxid (NO₂)\"}\n        mainSection={\n          <div style={{ width: \"100%\", minHeight: minHeight4MainSextion }}>\n            {foto !== undefined && (\n              <img\n                alt='Bild'\n                style={{\n                  paddingLeft: 10,\n                  paddingRight: 10,\n                  float: \"right\",\n                  paddingBottom: \"5px\",\n                }}\n                src={foto}\n                width='250'\n              />\n            )}\n            <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n              <b>Adresse:</b>\n\n              <p>\n                {station?.strasse} {station?.hausnummer}{\" \"}\n                {station?.zusatzinfo && <span>({station?.zusatzinfo})</span>}\n              </p>\n\n              <b>Stationsaktivität::</b>\n\n              {station?.bis !== undefined && (\n                <p>\n                  Von {new Date(station?.von).toLocaleDateString()} bis{\" \"}\n                  {new Date(station?.bis).toLocaleDateString()} generierte diese Station insgesamt{\" \"}\n                  {valueCounter} NO₂-Messwerte (Ausfälle nicht berücksichtigt).\n                </p>\n              )}\n              {station?.bis === undefined && (\n                <p>\n                  Seit {new Date(station?.von).toLocaleDateString()} generierte diese Station{\" \"}\n                  {valueCounter} NO₂-Messwerte (Ausfälle nicht berücksichtigt).\n                </p>\n              )}\n              <b>Messausfälle:</b>\n              {outageCounter > 0 && (\n                <p>\n                  Diese Messstation generierte an {outageCounter}{\" \"}\n                  {outageCounter === 1 ? \"Monat\" : \"Monaten\"} einen Messausfall. Damit besitzt sie\n                  eine Zuverlässigkeit von{\" \"}\n                  {Math.round(\n                    ((valueCounter - outageCounter) / (valueCounter + outageCounter)) * 1000\n                  ) / 10}\n                  %.\n                </p>\n              )}\n              {outageCounter === 0 && (\n                <p>\n                  Diese Messstation lieferte in jedem Monat der Stationsaktivität einen\n                  NO₂-Messwert. Damit liegt bisher kein Messausfall vor.\n                </p>\n              )}\n            </div>\n          </div>\n        }\n        subSections={subSections}\n      />\n    );\n  } else {\n    return null;\n  }\n};\nexport default InfoPanel;\n","import { useEffect } from \"react\";\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-cismap/topicMaps.css\";\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport FeatureCollection from \"react-cismap/FeatureCollection\";\nimport GenericInfoBoxFromFeature from \"react-cismap/topicmaps/GenericInfoBoxFromFeature\";\n\nimport getGTMFeatureStyler from \"react-cismap/topicmaps/generic/GTMStyler\";\nimport ContactButton from \"react-cismap/ContactButton\";\nimport convertItemToFeature, { getStatus } from \"./helper/convertItemToFeature\";\n\nimport { getClusterIconCreatorFunction } from \"react-cismap/tools/uiHelper\";\nimport MyMenu from \"./Menu\";\nimport LogSelection from \"./helper/LogSelectedFeature\";\nimport UWZ from \"./Umweltzonenlayer\";\nimport itemFilterFunction from \"./helper/filterFunction\";\nimport { LOOKUP } from \"./helper/constants\";\nimport { getGazData } from \"./helper/getGazData\";\nimport titleFactory from \"./helper/titleFactory\";\nimport InfoPanel from \"./SecondaryInfo\";\n\nfunction App() {\n  const [gazData, setGazData] = useState([]);\n\n  useEffect(() => {\n    getGazData(setGazData);\n    document.title = \"Luftmessstationskarte Wuppertal\";\n  }, []);\n  return (\n    <TopicMapContextProvider\n      appKey='LuftmessstationenWuppertal.TopicMap'\n      featureItemsURL={\"https://wupp-topicmaps-data.cismet.de/data/no2.data.json\"}\n      getFeatureStyler={getGTMFeatureStyler}\n      featureTooltipFunction={(feature) => feature?.text}\n      convertItemToFeature={convertItemToFeature}\n      clusteringOptions={{\n        iconCreateFunction: getClusterIconCreatorFunction(30, (props) => props.color),\n      }}\n      additionalLayerConfiguration={{\n        uwz: {\n          title: \"Umweltzone\",\n          initialActive: true,\n          layer: <UWZ />,\n        },\n      }}\n      filterState={{\n        stations: [\"unauffaellig\", \"auffaellig\", \"warnend\", \"inaktiv\", \"abgebaut\"],\n      }}\n      titleFactory={titleFactory}\n      itemFilterFunction={itemFilterFunction}\n      classKeyFunction={(item) => LOOKUP[getStatus(item)].title}\n      getColorFromProperties={(item) => LOOKUP[getStatus(item)].color}\n    >\n      <TopicMapComponent\n        locatorControl={true}\n        gazData={gazData}\n        modalMenu={<MyMenu />}\n        gazetteerSearchPlaceholder='Stadtteil | Adresse | POI'\n        infoBox={\n          <GenericInfoBoxFromFeature\n            pixelwidth={350}\n            config={{\n              displaySecondaryInfoAction: true,\n\n              city: \"Wuppertal\",\n              navigator: {\n                noun: {\n                  singular: \"Messstation\",\n                  plural: \"Messstationen\",\n                },\n              },\n              noCurrentFeatureTitle: \"Keine Messtationen gefunden\",\n              noCurrentFeatureContent: \"\",\n            }}\n          />\n        }\n        secondaryInfo={<InfoPanel />}\n      >\n        <ContactButton\n          title='Rückfrage zu den Messwerten'\n          action={() => {\n            let link = document.createElement(\"a\");\n            link.setAttribute(\"type\", \"hidden\");\n            const br = \"\\n\";\n\n            let mailToHref =\n              \"mailto:luftreinhaltung@stadt.wuppertal.de?subject=Rückfrage zu Messwerten&body=\" +\n              encodeURI(`Sehr geehrte Damen und Herren,${br}${br} zu der Luftmessstationskarte `) +\n              encodeURI(`auf${br}${br}`) +\n              `${window.location.href.replace(/&/g, \"%26\").replace(/#/g, \"%23\")}` +\n              encodeURI(\n                `${br}` +\n                  `${br}` +\n                  `habe ich folgende Frage:${br}` +\n                  `${br}${br}${br}${br}` +\n                  `Mit freundlichen Grüßen${br}` +\n                  `${br}` +\n                  `${br}`\n              );\n            document.body.appendChild(link);\n            //link.href = downloadOptions.url;\n            link.href = mailToHref;\n            //link.download = downloadOptions.file;\n            //link.target = \"_blank\";\n            link.click();\n          }}\n        />\n        <FeatureCollection></FeatureCollection>\n        <LogSelection />\n      </TopicMapComponent>\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}