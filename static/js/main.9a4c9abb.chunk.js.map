{"version":3,"sources":["helper/constants.js","helper/convertItemToFeature.js","version.js","MenuFooter.js","Menu.js","Umweltzonenlayer.js","helper/filterFunction.js","helper/getGazData.js","helper/titleFactory.js","SecondaryInfo.js","Luftmessstationskarte.js","App.js","reportWebVitals.js","index.js"],"names":["host","LOOKUP","abgebaut","color","signature","header","title","filterTitle","inaktiv","unauffaellig","auffaellig","warnend","unknown","MONTHS","name","shortname","openDataIntro","opendataLinkSections","target","href","hasValues","item","values","werte","undefined","JSON","stringify","getLastMeasurement","lym","getLastYearMeasurements","lymValues","year","Array","isArray","length","value","monthIndex","months","Object","keys","m","push","parseInt","sort","last","pop","ly","sortedkeys","getLastYear","getLastYearMinus1Measurements","lym1","getLastYearM1","getActivityStatus","bis","getStatus","getStatus4Value","getSignature","status","getAdditionalInfo","allAvgYears","mittelwerte","last2Years","slice","threshold","Date","getFullYear","avgYears","filter","ret","a","b","getTitle","lm","demontage","getMonth","convertItemToFeature","itemIn","clonedItem","parse","rawWerte","newWerte","addSVGToProps","i","text","strasse","hausnummer","zusatzinfo","geometry","geojson","info","additionalInfo","subtitle","bild","foto","type","selected","crs","properties","APPERSION","getApplicationVersion","Footer","setAppMenuActiveMenuSection","useContext","UIDispatchContext","style","fontSize","className","onClick","scroller","scrollTo","containerId","document","reactCismapVersion","rel","MyMenu","FeatureCollectionContext","filterState","filteredItems","filterMode","shownFeatures","FeatureCollectionDispatchContext","setFilterState","kategorien","setFilterMode","items","themen","filterConfiguration","mode","resetedFilter","stations","filters","key","indent","icon","iconPos","setAll","setNone","colorizer","simpleHelp","content","helpConfig","configs","bsStyle","contentBlockConf","docBlockConfigs","replaceConfig","lic_lbk","lic_sp","Icon","to","cursor","CustomizationContextProvider","customizations","inKartePositionieren","listWithSymbols","ModalApplicationMenu","menuIcon","menuTitle","menuFooter","MenuFooter","menuIntroduction","smooth","delay","menuSections","Section","sectionKey","sectionTitle","term","count","getFilterHeader","sectionBsStyle","sectionContent","FilterPanel","DefaultSettingsPanel","previewMapPosition","previewMapClusteringOptions","ConfigurableDocBlocks","NW","props","whiteSpace","children","getUWZ","setUWZ","md5FetchJSON","uwz","UWZ","useState","location","TopicMapContext","useEffect","featureCollection","feature","weight","opacity","fillColor","fillOpacity","labeler","zoom","textShadow","featureClickHandler","itemFilterFunction","filterStateStations","includes","getGazData","setGazData","prefix","sources","md5FetchText","adressen","bezirke","quartiere","pois","kitas","no2","gazData","getGazDataForTopicIds","factory","featureCollectionContext","console","log","filterDescription","stationsArten","parts","art","join","ReactChartkick","addAdapter","Chart","InfoPanel","selectedFeature","windowSize","ResponsiveTopicMapContext","station","footer","minHeight4MainSextion","last12","valueCounter","outageCounter","avgs","last12ChartData","last12Colors","avgsChartData","avgsColors","yearValues","Math","min","lastYearValues","lastYear","lastYearM1Values","twoYearVals","index","max","years","currentYear","entry","Color","fade","subSections","legend","textAlign","marginLeft","marginRight","width","SecondaryInfoPanelSection","padding","paddingTop","data","library","backgroundColor","borderColor","hoverBackgroundColor","hoverBorderColor","display","labels","fontColor","defaults","global","stationsaktivitaet","twothousandandeight","von","toLocaleDateString","round","toLocaleString","SecondaryInfo","titleIconName","mainSection","minHeight","float","alt","paddingLeft","paddingRight","horizontalAlignment","paddingBottom","src","Comp","setSelectedFeatureByPredicate","TopicMapComponent","locatorControl","modalMenu","applicationMenuTooltipString","gazetteerSearchPlaceholder","infoBox","GenericInfoBoxFromFeature","pixelwidth","config","displaySecondaryInfoAction","city","navigator","noun","singular","plural","noCurrentFeatureTitle","noCurrentFeatureContent","secondaryInfo","gazetteerHitTrigger","hits","more","mid","id","ContactButton","action","link","createElement","setAttribute","br","mailToHref","encodeURI","window","replace","body","appendChild","click","FeatureCollection","App","TopicMapContextProvider","appKey","featureItemsURL","referenceSystemDefinition","MappingConstants","proj4crs25832def","mapEPSGCode","referenceSystem","crs25832","getFeatureStyler","getGTMFeatureStyler","featureTooltipFunction","clusteringOptions","iconCreateFunction","getClusterIconCreatorFunction","additionalLayerConfiguration","initialActive","layer","titleFactory","classKeyFunction","getColorFromProperties","Luftmessstationskarte","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a4c9abb.chunk.js","sourcesContent":["import React from \"react\";\nexport const host = \"https://wupp-topicmaps-data.cismet.de\";\n\nexport const LOOKUP = {\n  abgebaut: {\n    color: \"#9DBCCC\",\n    signature: \"Luft_Icon_Messstation_abgebaut_farbig.svg\",\n    header: \"Messstation für NO₂ (inaktiv, abmontiert)\",\n    title: \"abmontiert\",\n    filterTitle: \"abmontierte\",\n  },\n  inaktiv: {\n    color: \"#4FAFC5\",\n    signature: \"Luft_Icon_Messstation_deaktiv_farbig.svg\",\n    header: \"Messstation für NO₂ (aktiv, aktuell Messausfall)\",\n    title: \"inaktiv\",\n    filterTitle: \"Messstationsausfälle\",\n  },\n  unauffaellig: {\n    color: \"#9ACD32\",\n    signature: \"Luft_Icon_Messstation_unauffaellig_farbig.svg\",\n    header: \"Messstation für NO₂ (aktiv, unauffällig)\",\n    title: \"unauffällig\",\n    filterTitle: \"unauffällige\",\n  },\n  auffaellig: {\n    color: \"#FFA500\",\n    signature: \"Luft_Icon_Messstation_auffaellig_farbig.svg\",\n    header: \"Messstation für NO₂ (aktiv, auffällig)\",\n    title: \"auffällig\",\n    filterTitle: \"auffällige\",\n  },\n  warnend: {\n    color: \"#E01414\",\n    signature: \"Luft_Icon_Messstation_warnend_farbig.svg\",\n    header: \"Messstation für NO₂ (aktiv, warnend)\",\n    title: \"warnend\",\n    filterTitle: \"warnende\",\n  },\n  unknown: { color: \"#eeeeee\", signature: \"Platz.svg\", header: \"Fehler\" },\n};\n\nexport const MONTHS = [\n  { name: \"Januar\", shortname: \"Jan.\" },\n  { name: \"Februar\", shortname: \"Feb.\" },\n  { name: \"März\", shortname: \"Mär.\" },\n  { name: \"April\", shortname: \"Apr.\" },\n  { name: \"Mai\", shortname: \"Mai.\" },\n  { name: \"Juni\", shortname: \"Jun.\" },\n  { name: \"Juli\", shortname: \"Jul.\" },\n  { name: \"August\", shortname: \"Aug.\" },\n  { name: \"September\", shortname: \"Sep.\" },\n  { name: \"Oktober\", shortname: \"Okt.\" },\n  { name: \"November\", shortname: \"Nov.\" },\n  { name: \"Dezember\", shortname: \"Dez.\" },\n];\n\nconst openDataIntro = (\n  <span>\n    Die Daten dieser Luftmessstation sind im Open-Data-Portal der Stadt Wuppertal verfügbar:\n  </span>\n);\nexport const opendataLinkSections = [\n  <div>\n    {openDataIntro}\n    <ul>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/luftmessstationen-wuppertal-passivsammler'\n        >\n          Stammdaten der Luftmessstationen\n        </a>\n      </li>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/no2-messdaten-wuppertal-passivsammler-2006-und-2007'\n        >\n          Messwerte und Jahresmittelwerte 2006/2007\n        </a>\n      </li>\n    </ul>\n  </div>,\n  <div>\n    {openDataIntro}\n    <ul>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/luftmessstationen-wuppertal-passivsammler'\n        >\n          Stammdaten der Luftmessstationen\n        </a>\n      </li>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/no2-messdaten-wuppertal-passivsammler-2006-und-2007'\n        >\n          Messwerte und Jahresmittelwerte 2006/2007\n        </a>\n      </li>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/no2-messdaten-wuppertal-passivsammler-ab-2008'\n        >\n          NO₂-Messwerte seit 2008\n        </a>\n      </li>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/no2-jahresmittelwerte-wuppertal-passivsammler-ab-2008'\n        >\n          Jahresmittelwerte seit 2008\n        </a>\n      </li>\n    </ul>\n  </div>,\n  <div>\n    {openDataIntro}\n    <ul>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/luftmessstationen-wuppertal-passivsammler'\n        >\n          Stammdaten der Luftmessstationen\n        </a>\n      </li>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/no2-messdaten-wuppertal-passivsammler-ab-2008'\n        >\n          NO₂-Messwerte seit 2008\n        </a>\n      </li>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/no2-jahresmittelwerte-wuppertal-passivsammler-ab-2008'\n        >\n          Jahresmittelwerte seit 2008\n        </a>\n      </li>\n    </ul>\n  </div>,\n  <div>\n    {openDataIntro}\n    <ul>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/luftmessstationen-wuppertal-passivsammler'\n        >\n          Stammdaten der Luftmessstationen\n        </a>\n      </li>\n\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/no2-messdaten-wuppertal-passivsammler-ab-2008'\n        >\n          NO₂-Messwerte seit 2008\n        </a>\n      </li>\n      <li>\n        <a\n          target='_opendata'\n          href='https://offenedaten-wuppertal.de/dataset/no2-jahresmittelwerte-wuppertal-passivsammler-ab-2008'\n        >\n          Jahresmittelwerte seit 2008\n        </a>\n      </li>\n    </ul>\n  </div>,\n];\n","import { addSVGToProps } from \"react-cismap/tools/svgHelper\";\n\nimport { useContext } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport { LOOKUP, MONTHS } from \"./constants\";\n\nconst hasValues = (item) => {\n  const values = item?.werte;\n  return values !== undefined && JSON.stringify(values) !== \"{}\";\n};\n\nconst convertWerteObjectToArray = (jahreswerte) => {\n  const retArr = [];\n  for (const monthIndex of Object.keys(jahreswerte)) {\n    retArr[parseInt(monthIndex - 1)] = jahreswerte[monthIndex];\n  }\n};\n\nconst getLastMeasurement = (item) => {\n  const lym = getLastYearMeasurements(item);\n\n  if (lym) {\n    const { values: lymValues, year } = lym;\n    if (Array.isArray(lymValues)) {\n      if (lymValues.length === 13) {\n        return { value: lymValues[11], monthIndex: 11, year };\n      } else {\n        return { value: lymValues[lymValues.length - 1], monthIndex: lymValues.length - 1, year };\n      }\n    } else {\n      const monthsIndices = Object.keys(lymValues);\n      const months = [];\n      for (const m of monthsIndices) {\n        months.push(parseInt(m));\n      }\n      months.sort();\n      const last = months.pop();\n\n      return { value: lymValues[last], monthIndex: last, year };\n    }\n  }\n};\nconst getLastYear = (item) => {\n  if (hasValues(item)) {\n    const values = item?.werte;\n    const sortedkeys = Object.keys(values).sort();\n    return sortedkeys[sortedkeys.length - 1];\n  }\n};\nconst getLastYearM1 = (item) => {\n  if (hasValues(item)) {\n    const values = item?.werte;\n    const sortedkeys = Object.keys(values).sort();\n    if (sortedkeys.length > 1) {\n      return sortedkeys[sortedkeys.length - 2];\n    }\n  }\n};\n\nexport const getLastYearMeasurements = (item) => {\n  const ly = getLastYear(item);\n\n  const values = item?.werte;\n  if (ly) {\n    return { values: values[ly], year: ly };\n  }\n};\nexport const getLastYearMinus1Measurements = (item) => {\n  const lym1 = getLastYearM1(item);\n  const values = item?.werte;\n  if (lym1) {\n    return values[lym1];\n  }\n};\n\nconst getActivityStatus = (item) => {\n  if (item?.bis !== undefined) {\n    return \"abgebaut\";\n  } else {\n    return \"aktiv\";\n  }\n  //todo inaktiv\n};\n\n// unauffällig 1-35 (einschließlich) µg/m³ Grün\n// auffällig 36-40 (einschließlich) µg/m³ Orange\n// warnend >40 µg/m³ Rot\nexport const getStatus = (item) => {\n  if (getActivityStatus(item) === \"aktiv\") {\n    const lym = getLastMeasurement(item)?.value;\n    const status = getStatus4Value(lym);\n\n    return status;\n  } else {\n    return getActivityStatus(item);\n  }\n};\n\nexport const getStatus4Value = (value) => {\n  if (value > 0 && value <= 35) {\n    return \"unauffaellig\";\n  } else if (value > 35 && value <= 40) {\n    return \"auffaellig\";\n  } else if (value > 40) {\n    return \"warnend\";\n  } else if (value === 9999) {\n    return \"inaktiv\";\n  } else {\n    return \"unknown\";\n  }\n};\n\n// export const getStatus4Value = (value) => {\n//   if (value > 0 && value <= 28) {\n//     return \"unauffaellig\";\n//   } else if (value > 28 && value <= 33) {\n//     return \"auffaellig\";\n//   } else if (value > 33) {\n//     return \"warnend\";\n//   } else if (value === 9999) {\n//     return \"inaktiv\";\n//   } else {\n//     return \"unknown\";\n//   }\n// };\n\nconst getSignature = (item) => {\n  const status = getStatus(item);\n  return LOOKUP[status].signature;\n};\n\nconst getAdditionalInfo = (item) => {\n  const allAvgYears = Object.keys(item?.mittelwerte);\n  allAvgYears.sort();\n  const last2Years = allAvgYears.slice(-2);\n\n  const currentYear = new Date().getFullYear();\n  const threshold = currentYear - 2;\n\n  const avgYears = last2Years.filter((year) => parseInt(year) >= threshold);\n\n  let ret = \"\";\n  avgYears.sort(function (a, b) {\n    return parseInt(b) - parseInt(a);\n  });\n  if (avgYears.length === 0) {\n    ret = \"Kein gewichteter Jahresmittelwert aus dem vergangenen Kalenderjahr vorhanden.\";\n  } else if (avgYears.length === 1) {\n    ret = \"Gewichteter Jahresmittelwert:\";\n  } else {\n    ret = \"Gewichtete Jahresmittelwerte:\";\n  }\n  for (const year of avgYears) {\n    ret = ret + \"\\n\" + item?.mittelwerte[year] + \" µg/m³ (\" + year + \")\";\n  }\n\n  return ret;\n};\n\nconst getTitle = (item) => {\n  const lm = getLastMeasurement(item);\n\n  if (item?.bis) {\n    const demontage = new Date(item?.bis);\n\n    return `Diese Messstation ist seit ${\n      MONTHS[demontage.getMonth()].name\n    } ${demontage.getFullYear()} abmontiert.`;\n  } else {\n    if (lm) {\n      if (lm.value !== 9999) {\n        return lm.value + \" µg/m³ (\" + MONTHS[lm.monthIndex].name + \" \" + lm.year + \")\";\n      } else {\n        return (\n          \"Für \" +\n          MONTHS[lm.monthIndex].name +\n          \" \" +\n          lm.year +\n          \"liefert diese Messstation keinen Messwert\"\n        );\n      }\n    } else {\n      return \"Diese Messstation ist abmontiert\";\n    }\n  }\n};\n\nconst convertItemToFeature = async (itemIn) => {\n  let clonedItem = JSON.parse(JSON.stringify(itemIn));\n  let rawWerte = clonedItem.werte;\n  let newWerte = {};\n  for (const year of Object.keys(rawWerte)) {\n    newWerte[year] = [];\n    for (const monthIndex of Object.keys(rawWerte[year])) {\n      newWerte[year][parseInt(monthIndex - 1)] = rawWerte[year][monthIndex];\n    }\n  }\n\n  clonedItem.werte = newWerte;\n\n  let item = await addSVGToProps(clonedItem, (i) => \"luft/\" + getSignature(i));\n\n  item.status = getStatus(item);\n\n  const text =\n    item?.strasse +\n    \" \" +\n    (item?.hausnummer || \"\") +\n    (item?.zusatzinfo !== undefined ? \" (\" + item?.zusatzinfo + \")\" : \"\");\n\n  const type = \"Feature\";\n  const selected = false;\n  const geometry = item?.geojson;\n  item.color = LOOKUP[item.status].color;\n  const info = {\n    header: LOOKUP[item.status].header,\n    title: getTitle(item),\n    additionalInfo: getAdditionalInfo(item),\n    subtitle: (\n      <span>\n        {item?.strasse} {item?.hausnummer} {item?.zusatzinfo && <span>({item?.zusatzinfo})</span>}\n      </span>\n    ),\n  };\n  item.info = info;\n  if (item?.bild) {\n    item.foto = \"https://www.wuppertal.de/geoportal/luftmessstationen/fotos/\" + item.bild;\n  }\n\n  return {\n    text,\n    type,\n    selected,\n    geometry,\n    crs: {\n      type: \"name\",\n      properties: {\n        name: \"urn:ogc:def:crs:EPSG::25832\",\n      },\n    },\n    properties: item,\n  };\n};\nexport default convertItemToFeature;\n","const APPERSION = \"0.10.10\";\nconst APPHASH = \"#9c467f89077d87231fbb5b68866f6731365e9039\";\n\nexport const getApplicationVersion = () => {\n  /*eslint-disable no-useless-concat*/\n  if (APPERSION === \"%APPLICATION\" + \"_\" + \"VERSION%\") {\n    return \"dev-hot-reload\";\n  } else {\n    return APPERSION;\n  }\n};\nexport const getApplicationHash = () => {\n  if (APPHASH === \"%APPLICATION\" + \"_\" + \"HASH%\") {\n    return \"#dev-hot-reload\";\n  } else {\n    return APPHASH;\n  }\n};\n","import { useContext } from \"react\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getApplicationVersion } from \"./version\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\nimport { Link, scroller } from \"react-scroll\";\n\nconst Footer = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n\n  return (\n    <div style={{ fontSize: \"11px\" }}>\n      <b>Hintergrundkarten</b>: Stadtkarte 2.0 © RVR | True Orthophoto 2020 © Stadt Wuppertal{\" \"}\n      <a\n        className='pleaseRenderAsLink'\n        onClick={() => {\n          setAppMenuActiveMenuSection(\"help\");\n          scroller.scrollTo(\"Datengrundlage\", { containerId: \"myMenu\" });\n        }}\n      >\n        (Details und Nutzungsbedingungen)\n      </a>\n      <br />\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n};\nexport default Footer;\n","import { useContext } from \"react\";\nimport {\n  FeatureCollectionContext,\n  FeatureCollectionDispatchContext,\n} from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport { UIDispatchContext } from \"react-cismap/contexts/UIContextProvider\";\nimport { getSimpleHelpForTM } from \"react-cismap/tools/uiHelper\";\nimport { Link } from \"react-scroll\";\nimport ModalApplicationMenu from \"react-cismap/topicmaps/menu/ModalApplicationMenu\";\nimport Section from \"react-cismap/topicmaps/menu/Section\";\nimport FilterPanel from \"react-cismap/topicmaps/menu/FilterPanel\";\nimport DefaultSettingsPanel from \"react-cismap/topicmaps/menu/DefaultSettingsPanel\";\nimport ConfigurableDocBlocks from \"react-cismap/topicmaps/ConfigurableDocBlocks\";\nimport { LOOKUP } from \"./helper/constants\";\nimport MenuFooter from \"./MenuFooter\";\nimport CustomizationContextProvider from \"react-cismap/contexts/CustomizationContextProvider\";\nimport Icon from \"react-cismap/commons/Icon\";\n\nconst MyMenu = () => {\n  const { setAppMenuActiveMenuSection } = useContext(UIDispatchContext);\n  const { filterState, filterMode, filteredItems, shownFeatures } =\n    useContext(FeatureCollectionContext);\n  const { setFilterState, setFilterMode } = useContext(FeatureCollectionDispatchContext);\n\n  const { items } = useContext(FeatureCollectionContext);\n\n  const kategorien = [];\n  const katValues = [];\n  const themen = [];\n  const themenValues = [];\n  const topicMapTitle = \"Luftmessstationskarte Wuppertal\";\n\n  const getFilterHeader = () => {\n    const count = filteredItems?.length || 0;\n\n    let term;\n    if (count === 1) {\n      term = \"Standort\";\n    } else {\n      term = \"Standorte\";\n    }\n\n    return `Messstationen der Luftqualität (${count} ${term} gefunden, davon ${\n      shownFeatures?.length || \"0\"\n    } in der Karte)`;\n  };\n\n  const filterConfiguration = {\n    mode: \"list\", // list or tabs\n    resetedFilter: {\n      stations: [\"unauffaellig\", \"auffaellig\", \"warnend\", \"inaktiv\", \"abgebaut\"],\n    },\n    filterMode: \"gibtnureinen\",\n    filters: [\n      {\n        title: \"aktive Messstationen\",\n        key: \"stations\",\n        type: \"checkBoxes\",\n        values: [\n          {\n            keys: [\"unauffaellig\", \"auffaellig\", \"warnend\", \"inaktiv\"],\n            title: \"alle aktiven Stationen\",\n          },\n          {\n            key: \"unauffaellig\",\n            indent: 30,\n            title: \"unauffällige Stationen\",\n            color: LOOKUP.unauffaellig.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n          {\n            key: \"auffaellig\",\n            indent: 30,\n            title: \"auffällige Stationen\",\n            color: LOOKUP.auffaellig.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n          {\n            key: \"warnend\",\n            indent: 30,\n            title: \"warnende Stationen\",\n            color: LOOKUP.warnend.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n          {\n            key: \"inaktiv\",\n            indent: 30,\n            title: \"Stationen mit Messausfall\",\n            color: LOOKUP.inaktiv.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n        ],\n        setAll: () => {\n          setFilterState({ ...filterState, themen });\n        },\n        setNone: () => {\n          setFilterState({ ...filterState, themen: [] });\n        },\n        colorizer: (item, selected) => (selected ? item.color : \"#eeeeee\"),\n      },\n      {\n        title: \"inaktive Messstationen\",\n        key: \"stations\",\n        type: \"checkBoxes\",\n        values: [\n          {\n            key: \"abgebaut\",\n            title: \"abmontierte Stationen\",\n            color: LOOKUP.abgebaut.color,\n            icon: \"square\",\n            iconPos: \"pre\",\n          },\n        ],\n        setAll: () => {\n          setFilterState({ ...filterState, kategorien });\n        },\n        setNone: () => {\n          setFilterState({ ...filterState, kategorien: [] });\n        },\n      },\n    ],\n  };\n  const simpleHelp = {\n    content: `Die Stadt Wuppertal führt seit vielen Jahren Messungen und Kartierungen durch,\num Aufschlüsse über die Luftbelastungssituation zu erhalten. Diese Erkenntnisse werden \nfür Maßnahmen zur Luftreinhaltung und die Stadtentwicklung genutzt. Einer der derzeit \nam meisten diskutierte Luftschadstoff ist Stickstoffdioxid (NO₂). Dieser wird als \nReizgas mit stechend-stickigem Geruch bereits in geringen Konzentrationen wahrgenommen. \nDie Inhalation ist für den Menschen der einzig relevante Aufnahmeweg. \n   \nDie europäische Union hat für ihre Mitgliedsstaaten mit mehreren Luftqualitätsrichtlinien\nverbindliche Luftqualitätsziele zur Vermeidung oder Verringerung schädlicher Auswirkungen\nauf die menschliche Gesundheit und die Umwelt festgelegt. Danach wird die Luftqualität\nin den Staaten der EU nach einheitlichen Methoden und Kriterien beurteilt. In der\nBundesrepublik Deutschland wurden diese Richtlinien durch Novellierung des\nBundes-Immissions­schutzgesetzes (BImSchG) sowie durch die Einführung der 39. Verordnung\nzum BImSchG (39. BImSchV) in deutsches Recht umgesetzt. Für Stickstoffdioxid (NO₂) gilt\nseit dem Jahr 2010 ein Jahresmittelwert für NO₂ von 40 µg pro Kubikmeter Luft. Die\nMessungen von Stickstoffdioxid (NO₂) werden in Wuppertal mit sogenannten Passivsammlern\ndurchgeführt und nahezu monatlich abgelesen.\n  \nDie Luftmessstationskarte zeigt die Positionen dieser Passivsammler im Wuppertaler Stadtgebiet,\nwelche in den vergangenen zehn Jahren Messwerte lieferten. Die farbigen Signaturen in der\nKarte beziehen sich dabei auf den zuletzt verfügbaren monatlichen NO₂-Messwert: unauffällig\ngrün (≦ 35 mg/m³), auffällig gelb (> 35 µg/m³) und warnend rot (> 40 µg/m³). Die Signaturen\nfür Passivsammler, welche bei der letzten monatlichen Ablesung keinen Messwert geliefert\nhaben, sind türkis eingefärbt (temporärer Ausfall). Wenn eine Messstation in den letzten\nzehn Jahren abgebaut wurde und damit keine weiteren NO₂-Messwerte liefert, liegt eine\nblaugraue Signatur vor. \n\nEin Passivsammler ist ein kleines mit Adsorbermaterial gefülltes Röhrchen, welches ohne Pumpe \n(ohne aktive Probenahme) Schadstoffe aus der Luft über die natürliche Ausbreitung und Verteilung \n(Diffusion) aufnehmen und anreichern kann. Zur Verringerung von wind- und turbulenzbedingten \nEinflüssen befindet sich an der offenen Seite des Probeentnahmeröhrchens eine Glasfritte. \nZum Schutz vor Witterungseinflüssen werden die Sammler in einem nach unten geöffneten Gehäuse \neingehängt und exponiert.\n\n<div style=\"text-align:center\">\n<img width=\"50%\" src=\"https://topicmaps-wuppertal.github.io/luftmessstationen/img/passivsammler.jpg\" />\n</div>\n\n_Beispiel für einen [Passivsammler](https://www.lanuv.nrw.de/fileadmin/lanuv/luft/gifs/no2_gr.jpg); \nBildquelle: Landesamt für Natur- Umwelt und Verbraucherschutz NRW ([LANUV](https://www.lanuv.nrw.de/impressum))._\n\nDie Funktionsweise eines Passivsammlers basiert auf der Anreicherung von Stickstoffdioxid (NO₂) an einem \ngeeigneten Adsorbens ohne aktive Probennahme. Das Probeentnahmesystem besteht aus einem Kunststoffröhrchen, \nan dessen einem Ende sich ein mit Triethanolamin imprägniertes Edelstahl-Drahtsieb als Adsorbens befindet. \nDas in der Außenluft enthaltene NO₂ wird durch Diffusion zu diesem Adsorbens transportiert und dort adsorbiert. \nDie Röhrchen bzw. die Stickstoffdioxidmenge werden anschließend im Labor als Nitrit, z.B. mittels Fotometrie, \nanalysiert. Aus der Analytmenge, dem Expositionszeitraum und der Sammelrate wird die mittlere Konzentration \nim Expositionszeitraum berechnet. Typische Expositionszeiträume liegen im Bereich von zwei bis sechs Wochen.\n\nFür die in Wuppertal durchgeführten Messungen wurden Expositions- bzw. Messzeiträume von etwa vier Wochen \nrealisiert, um eine Auswertung auf Monatsmittelwertbasis zu ermöglichen. Der vorliegende Messwert beschreibt \ndie mittlere Konzentration im Expositionsraum. Nach etwa vier Wochen erfolgt an den Wuppertaler Messstationen \nder Probeentnahmewechsel durch ein beauftragtes Unternehmen. Nach dem Wechsel werden die Proben im Labor \nanalysiert. Die Messergebnisse liegen ca. 2-3 Wochen nach dem Wechsel vor; mögliche Verzögerungen bei der \nDatenlieferung treten selten auf. Nach Vorliegen der Daten werden diese seitens der Stadt Wuppertal auf \nPlausibilität geprüft. Die Daten werden spätestens eine Woche nach Erhalt in das Fachsystem übernommen. \nEs ergibt sich daraus eine maximale Verzögerung hinsichtlich des Zeitpunkts der Veröffentlichung der \nNO₂-Messwerte von ca. vier Wochen.\n`,\n  };\n\n  const titleContent = \"Die Karte <b>\" + topicMapTitle + \"</b>\";\n  const helpConfig = [\n    {\n      type: \"FAQS\",\n      configs: [\n        {\n          title: \"Datengrundlage\",\n          bsStyle: \"secondary\",\n          contentBlockConf: {\n            type: \"DOCBLOCK\",\n            docBlockConfigs: [\n              {\n                type: \"HTML\",\n                content:\n                  \"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\" +\n                  titleContent +\n                  \" bietet ihnen die folgenden\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tHintergrundkarten an, die auf verschiedenen Geodatendiensten und Geodaten\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbasieren:\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\",\n              },\n              {\n                type: \"HTML\",\n                content: `<p><ul><li id=\"lic_lbk\"/><li id=\"lic_sp\"/></ul>\n                  \n                  Neben dem Datensatz der <a href=\"https://offenedaten-wuppertal.de/dataset/umweltzonen-wuppertal\" \n                  target=\"_opendata\">Umweltzonen Wuppertal</a> stellt die Luftmessstationskarte \n                  auch die Daten der Luftmessstationen aus dem Open-Data-Angebot der Stadt Wuppertal dar:\n                  <br/> <br/>\n                  <ul>\n                    <li>\n                      <a\n                        target='_opendata'\n                        href='https://offenedaten-wuppertal.de/dataset/luftmessstationen-wuppertal-passivsammler'\n                      >\n                        Stammdaten der Luftmessstationen\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        target='_opendata'\n                        href='https://offenedaten-wuppertal.de/dataset/no2-messdaten-wuppertal-passivsammler-ab-2008'\n                      >\n                        Messdaten (Monatsmittelwerte) seit dem Jahr 2008\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        target='_opendata'\n                        href='https://offenedaten-wuppertal.de/dataset/no2-jahresmittelwerte-wuppertal-passivsammler-ab-2008'\n                      >\n                        Jahresmittelwerte seit dem Jahr 2008\n                      </a>\n                    </li>\n                    <li>\n                      <a\n                        target='_opendata'\n                        href='https://offenedaten-wuppertal.de/dataset/no2-messdaten-wuppertal-passivsammler-2006-und-2007'\n                      >\n                        Messdaten der Jahre 2006 und 2007\n                      </a>\n                    </li>\n                  </ul>\n                  </p>`,\n                replaceConfig: {\n                  lic_lbk: {\n                    type: \"LICENSE_LBK\",\n                  },\n                  lic_sp: {\n                    type: \"LICENSE_STADTPLAN\",\n                  },\n                },\n              },\n            ],\n          },\n        },\n        {\n          title: \"Hintergrund\",\n          bsStyle: \"secondary\",\n          contentBlockConf: {\n            type: simpleHelp.type || \"MARKDOWN\",\n            content: simpleHelp.content,\n          },\n        },\n        {\n          title: \"Fachobjekte auswählen und abfragen\",\n          bsStyle: \"success\",\n          contentBlockConf: {\n            type: \"FACHOBJEKTEAUSWAEHLENUNDABFRAGEN\",\n          },\n        },\n        {\n          title: \"Kartendarstellung der Fachobjekte\",\n          bsStyle: \"success\",\n          contentBlockConf: {\n            type: \"KARTENDARSTELLUNGDERFACHOBJEKTE\",\n          },\n        },\n        {\n          title: \"In Karte positionieren\",\n          bsStyle: \"warning\",\n          contentBlockConf: {\n            type: \"INKARTEPOSITIONIEREN\",\n          },\n        },\n        {\n          title: \"Mein Standort\",\n          bsStyle: \"warning\",\n          contentBlockConf: {\n            type: \"MEINSTANDORT\",\n          },\n        },\n        {\n          title: \"Filtern\",\n          bsStyle: \"warning\",\n          contentBlockConf: {\n            type: \"REACTCOMP\",\n            content: (\n              <div>\n                <p>\n                  Im Bereich &quot;<strong>Filter</strong>&quot; können Sie im Anwendungsmenü{\" \"}\n                  <Icon name='bars' /> die in der Karte angezeigten Luftmessstationen so ausdünnen,\n                  dass nur die für Sie interessanten Stationen übrig bleiben. Standardmäßig sind die\n                  Einstellungen hier so gesetzt, dass alle verfügbaren Luftmessstationen angezeigt\n                  werden.\n                </p>\n                <p>\n                  Mit den Optionsgruppen &quot;<strong>aktive Messstationen</strong>&quot; und\n                  &quot;<strong>inaktive Messstationen</strong>&quot; können Sie die Kartenanzeige\n                  auf Luftmessstationen beschränken, die im letzten verfügbaren Messzeitraum\n                  NO₂-Messwerte lieferten (ggf. kann ein temporärer Messausfall vorliegen) oder bei\n                  denen es sich um abmontierte Stationen handelt (ggf. werden in der Vergangenheit\n                  erfasste Messwerte im Datenblatt präsentiert). Die Unterteilung (Klassifizierung)\n                  der Stationen in der Optionsgruppe &quot;<strong>aktive Messstationen</strong>\n                  &quot; wird anhand des NO₂-Messwertes vorgenommen: unauffällig grün (≦ 35 µg/m³),\n                  auffällig gelb (&gt; 35 µg/m³), warnend rot (&gt; 40 µg/m³); temporärer Ausfall\n                  türkis (siehe auch Abschnitt{\" \"}\n                  <Link\n                    to={\"Hintergrund\"}\n                    containerId={\"myMenu\"}\n                    style={{ cursor: \"pointer\", color: \"#4688F7\" }}\n                  >\n                    Hintergrund\n                  </Link>\n                  ) .\n                </p>\n                <p>\n                  Ihre Einstellungen werden direkt in der blauen Titelzeile des Bereichs &quot;\n                  <strong>Filter</strong>&quot; und in dem Donut-Diagramm, das Sie rechts neben oder\n                  unter den Filteroptionen finden, ausgewertet. Die Titelzeile zeigt die\n                  Gesamtanzahl der Luftmessstationen, die den von Ihnen gesetzten Filterbedingungen\n                  entsprechen. Das Donut-Diagramm zeigt zusätzlich die Verteilung der\n                  klassifizierten Luftmessstationen (unauffällige, auffällige, warnende Stationen;\n                  Stationen mit Messausfall; abmontierte Stationen). Bewegen Sie dazu den Mauszeiger\n                  auf eines der farbigen Segmente des Diagramms.\n                </p>\n              </div>\n            ),\n          },\n        },\n        {\n          title: \"Einstellungen\",\n          bsStyle: \"info\",\n          contentBlockConf: {\n            type: \"EINSTELLUNGEN\",\n          },\n        },\n      ],\n    },\n  ];\n  return (\n    <CustomizationContextProvider\n      customizations={{\n        inKartePositionieren: {\n          listWithSymbols: (\n            <p>\n              Durch das in der Auswahlliste vorangestellte Symbol erkennen Sie, ob es sich bei einem\n              Treffer um einen{\" \"}\n              <NW>\n                <Icon name='circle' /> Stadtbezirk\n              </NW>\n              , ein{\" \"}\n              <NW>\n                <Icon name='pie-chart' /> Quartier\n              </NW>\n              , eine{\" \"}\n              <NW>\n                <Icon name='home' /> Adresse\n              </NW>\n              , eine{\" \"}\n              <NW>\n                <Icon name='road' /> Straße ohne Hausnummern\n              </NW>\n              , einen{\" \"}\n              <NW>\n                <Icon name='tag' /> POI\n              </NW>\n              , die{\" \"}\n              <NW>\n                <Icon name='tags' /> alternative Bezeichnung eines POI\n              </NW>\n              , eine{\" \"}\n              <NW>\n                <Icon name='child' /> Kindertageseinrichtung\n              </NW>\n              , eine{\" \"}\n              <NW>\n                <Icon name='graduation-cap' /> Schule\n              </NW>{\" \"}\n              oder eine{\" \"}\n              <NW>\n                <Icon name='cloudscale' /> Luftmessstation\n              </NW>{\" \"}\n              handelt.\n            </p>\n          ),\n        },\n      }}\n    >\n      <ModalApplicationMenu\n        menuIcon={\"bars\"}\n        menuTitle={\"Filter, Einstellungen und Kompaktanleitung\"}\n        menuFooter={<MenuFooter />}\n        menuIntroduction={\n          <span>\n            Benutzen Sie die Auswahlmöglichkeiten unter{\" \"}\n            <Link\n              className='useAClassNameToRenderProperLink'\n              to='filter'\n              containerId='myMenu'\n              smooth={true}\n              delay={100}\n              onClick={() => setAppMenuActiveMenuSection(\"filter\")}\n            >\n              Filter\n            </Link>\n            , um die in der Karte angezeigten vorbildlichen Luftmessstationen für Stickstoffdioxid\n            (NO₂) auf die für Sie relevanten Stationen zu beschränken. Über{\" \"}\n            <Link\n              className='useAClassNameToRenderProperLink'\n              to='settings'\n              containerId='myMenu'\n              smooth={true}\n              delay={100}\n              onClick={() => setAppMenuActiveMenuSection(\"settings\")}\n            >\n              Einstellungen\n            </Link>{\" \"}\n            können Sie die Darstellung der Hintergrundkarte und der Stationen an Ihre Vorlieben\n            anpassen. Wählen Sie die{\" \"}\n            <Link\n              className='useAClassNameToRenderProperLink'\n              to='help'\n              containerId='myMenu'\n              smooth={true}\n              delay={100}\n              onClick={() => setAppMenuActiveMenuSection(\"help\")}\n            >\n              Kompaktanleitung\n            </Link>{\" \"}\n            für detailliertere Bedienungsinformationen.\n          </span>\n        }\n        menuSections={[\n          <Section\n            key='filter'\n            sectionKey='filter'\n            sectionTitle={getFilterHeader()}\n            sectionBsStyle='primary'\n            sectionContent={\n              <div>\n                {/* <div>\n                  Die Filterung bezieht sich auf die Angaben zu einer Messstation im letzten\n                  Kalendermonat (letzte monatliche Datenerhebung). Wenn Sie weitergehende\n                  Informationen wünschen, können Sie eine Auswahl von Messwerten/Jahresmittelwerten\n                  im Datenblatt einer Messstation einsehen oder vollständigen Datenzugriff im\n                  Open-Data-Portal der Stadt Wuppertal erhalten. Die entsprechenden Links finden Sie\n                  im Abschnitt <a className='renderWithoutHref'>Datengrundlage</a> im Abschnitt\n                  Kompaktanleitung.\n                </div> */}\n                <FilterPanel filterConfiguration={filterConfiguration} />\n                <div>\n                  Die Filterung bezieht sich auf die Angaben zu einer Messstation im letzten\n                  Kalendermonat (letzte monatliche Datenerhebung). Wenn Sie weitergehende\n                  Informationen wünschen, können Sie eine Auswahl von Messwerten/Jahresmittelwerten\n                  im Datenblatt einer Messstation einsehen oder vollständigen Datenzugriff im\n                  Open-Data-Portal der Stadt Wuppertal erhalten. Die entsprechenden Links finden Sie\n                  im Abschnitt{\" \"}\n                  <a\n                    className='renderWithoutHref'\n                    onClick={() => setAppMenuActiveMenuSection(\"help\")}\n                  >\n                    Datengrundlage\n                  </a>{\" \"}\n                  im Abschnitt Kompaktanleitung.\n                </div>\n              </div>\n            }\n          />,\n          <DefaultSettingsPanel\n            previewMapPosition='lat=51.2607860760692&lng=7.164304562911684&title&zoom=9'\n            previewMapClusteringOptions={undefined}\n            key='settings'\n          />,\n          <Section\n            key='help'\n            sectionKey='help'\n            sectionTitle='Kompaktanleitung'\n            sectionBsStyle='default'\n            sectionContent={<ConfigurableDocBlocks configs={helpConfig} />}\n          />,\n        ]}\n      />\n    </CustomizationContextProvider>\n  );\n};\nexport default MyMenu;\nconst NW = (props) => {\n  return <span style={{ whiteSpace: \"nowrap\" }}>{props.children}</span>;\n};\n","import { FeatureCollectionDisplayWithTooltipLabels } from \"react-cismap\";\nimport { useEffect, useContext, useState } from \"react\";\nimport { TopicMapContext } from \"react-cismap/contexts/TopicMapContextProvider\";\nimport { md5FetchJSON } from \"react-cismap/tools/fetching\";\nimport { host } from \"./helper/constants\";\n\nconst getUWZ = async (setUWZ) => {\n  const uwz = await md5FetchJSON(\"MapData\", host + \"/data/umweltzonen.json\");\n  setUWZ(uwz);\n};\n\nconst UWZ = () => {\n  const [uwz, setUWZ] = useState([]);\n  const { location } = useContext(TopicMapContext);\n  useEffect(() => {\n    getUWZ(setUWZ);\n  }, []);\n\n  return (\n    <FeatureCollectionDisplayWithTooltipLabels\n      key={\"ds\"}\n      featureCollection={uwz}\n      style={(feature) => {\n        const style = {\n          color: \"#155317\",\n          weight: 3,\n          opacity: 0.5,\n          fillColor: \"#155317\",\n          fillOpacity: 0.15,\n        };\n        return style;\n      }}\n      labeler={(feature) => {\n        const currentZoom = location?.zoom || 8;\n        if (currentZoom > 7) {\n          return (\n            <h3\n              style={{\n                color: \"#155317\",\n                opacity: 0.7,\n                textShadow:\n                  \"1px 1px 0px  #000000,-1px 1px 0px  #000000, 1px -1px 0px  #000000, -1px -1px 0px  #000000, 2px 2px 15px #000000\",\n              }}\n            >\n              Umweltzone\n            </h3>\n          );\n        }\n      }}\n      featureClickHandler={() => {}}\n    />\n  );\n};\nexport default UWZ;\n","import { getStatus } from \"./convertItemToFeature\";\n\nconst itemFilterFunction = ({ filterState }) => {\n  return (item) => {\n    const filterStateStations = filterState?.stations;\n    const status = getStatus(item);\n    return filterStateStations.includes(status);\n  };\n};\nexport default itemFilterFunction;\n","import { md5FetchText } from \"react-cismap/tools/fetching\";\nimport { getGazDataForTopicIds } from \"react-cismap/tools/gazetteerHelper\";\nimport { host } from \"./constants\";\n\nexport const getGazData = async (setGazData) => {\n  const prefix = \"GazData\";\n  const sources = {};\n\n  sources.adressen = await md5FetchText(prefix, host + \"/data/adressen.json\");\n  sources.bezirke = await md5FetchText(prefix, host + \"/data/bezirke.json\");\n  sources.quartiere = await md5FetchText(prefix, host + \"/data/quartiere.json\");\n  sources.pois = await md5FetchText(prefix, host + \"/data/pois.json\");\n  sources.kitas = await md5FetchText(prefix, host + \"/data/kitas.json\");\n  sources.no2 = await md5FetchText(prefix, host + \"/data/no2.json\");\n\n  const gazData = getGazDataForTopicIds(sources, [\n    \"no2\",\n    \"pois\",\n    \"kitas\",\n    \"bezirke\",\n    \"quartiere\",\n    \"adressen\",\n  ]);\n\n  setGazData(gazData);\n};\n","import { LOOKUP } from \"./constants\";\nconst factory = ({ featureCollectionContext }) => {\n  const getThemaById = (id) => {\n    const result = featureCollectionContext?.items?.find((item) => item?.thema?.id === id);\n    return result?.thema?.name;\n  };\n  console.log(\"featureCollectionContext?.filterState?\", featureCollectionContext?.filterState);\n\n  let filterDescription = \"?\";\n  if (featureCollectionContext?.filteredItems?.length === featureCollectionContext?.items?.length) {\n    filterDescription = undefined;\n  } else {\n    const stationsArten = [...featureCollectionContext?.filterState?.stations];\n    stationsArten.sort();\n\n    stationsArten.sort((a, b) => {\n      if (a < b || a === \"inaktiv\") {\n        return -1;\n      }\n      if (a > b || b === \"inaktiv\") {\n        return 1;\n      }\n      // a muss gleich b sein\n      return 0;\n    });\n    console.log(\"yyy stationsArten\", stationsArten);\n\n    if (\n      stationsArten.includes(\"unauffaellig\") &&\n      stationsArten.includes(\"auffaellig\") &&\n      stationsArten.includes(\"warnend\") &&\n      stationsArten.includes(\"inaktiv\")\n    ) {\n      filterDescription = \"nur aktive Messstationen\";\n    } else if (stationsArten.length === 1 && !stationsArten.includes(\"inaktiv\")) {\n      filterDescription = `nur ${LOOKUP[stationsArten[0]].filterTitle} Messstationen`;\n    } else if (stationsArten.length === 1) {\n      filterDescription = `nur ${LOOKUP[stationsArten[0]].filterTitle}`;\n    } else {\n      const parts = [];\n      for (const art of stationsArten) {\n        parts.push(LOOKUP[art].filterTitle);\n      }\n\n      filterDescription = `nur ${parts.slice(0, parts.length - 1).join(\", \")} und ${\n        parts[parts.length - 1]\n      } Messstationen`;\n    }\n  }\n\n  // if (featureCollectionContext?.filteredItems?.length === 0) {\n  //   return (\n  //     <div>\n  //       <b>Keine Luftmessstationen gefunden!</b> Bitte überprüfen Sie Ihre Filtereinstellungen.\n  //     </div>\n  //   );\n  // }\n\n  if (filterDescription) {\n    return (\n      <div>\n        <b>Meine Messstationen der Luftqualität:</b> {filterDescription}\n      </div>\n    );\n  } else {\n    return undefined;\n  }\n};\n\nexport default factory;\n","import React, { useContext, useRef } from \"react\";\nimport { FeatureCollectionContext } from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport SecondaryInfoPanelSection from \"react-cismap/topicmaps/SecondaryInfoPanelSection\";\nimport SecondaryInfo from \"react-cismap/topicmaps/SecondaryInfo\";\nimport {\n  getLastYearMeasurements,\n  getLastYearMinus1Measurements,\n  getStatus4Value,\n} from \"./helper/convertItemToFeature\";\nimport Chart from \"chart.js\";\nimport ReactChartkick, { ColumnChart } from \"react-chartkick\";\nimport { LOOKUP, MONTHS, opendataLinkSections } from \"./helper/constants\";\nimport Color from \"color\";\nimport Icon from \"react-cismap/commons/Icon\";\nimport { ResponsiveTopicMapContext } from \"react-cismap/contexts/ResponsiveTopicMapContextProvider\";\nimport { getApplicationVersion } from \"./version\";\nimport { version as reactCismapVersion } from \"react-cismap/meta\";\n\nReactChartkick.addAdapter(Chart);\n\nconst InfoPanel = () => {\n  const { selectedFeature, items } = useContext(FeatureCollectionContext);\n  const { windowSize } = useContext(ResponsiveTopicMapContext);\n  const station = selectedFeature?.properties;\n  const footer = (\n    <div style={{ fontSize: \"11px\" }}>\n      <div>\n        <b>\n          {document.title} v{getApplicationVersion()}\n        </b>\n        :{\" \"}\n        <a href='https://cismet.de/' target='_cismet'>\n          cismet GmbH\n        </a>{\" \"}\n        auf Basis von{\" \"}\n        <a href='http://leafletjs.com/' target='_more'>\n          Leaflet\n        </a>{\" \"}\n        und{\" \"}\n        <a href='https://cismet.de/#refs' target='_cismet'>\n          cids | react-cismap v{reactCismapVersion}\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          target='_blank'\n          rel='noopener noreferrer'\n          href='https://cismet.de/datenschutzerklaerung.html'\n        >\n          Datenschutzerklärung (Privacy Policy)\n        </a>\n      </div>\n    </div>\n  );\n  if (station !== undefined) {\n    let foto = station?.foto;\n\n    let minHeight4MainSextion = undefined;\n    if (foto !== undefined) {\n      minHeight4MainSextion = 250;\n    }\n\n    // --- value and outage counter and avg of the last 10 years\n    let valueCounter = 0;\n    let outageCounter = 0;\n    const avgs = JSON.parse(JSON.stringify(station?.mittelwerte));\n    const last12ChartData = [];\n\n    const last12Colors = [];\n    const avgsChartData = [];\n    const avgsColors = [];\n    for (const year of Object.keys(station.werte)) {\n      const yearValues = station.werte[year];\n      for (let i = 0; i < Math.min(yearValues.length, 12); ++i) {\n        if (yearValues[i] === -9999) {\n          outageCounter++;\n        } else {\n          valueCounter++;\n        }\n      }\n    }\n\n    let last12;\n\n    if (station?.werte && Object.keys(station?.werte).length > 0) {\n      // --- measurements of the last 12 months\n      let { values: lastYearValues, year: lastYear } = getLastYearMeasurements(station);\n      let lastYearM1Values = getLastYearMinus1Measurements(station);\n\n      let twoYearVals = [];\n      if (lastYearM1Values) {\n        let index = 0;\n        for (const value of lastYearM1Values) {\n          twoYearVals.push({ year: lastYear - 1, index, value });\n          index++;\n        }\n      }\n      if (lastYearValues) {\n        let index = 0;\n        for (const value of lastYearValues) {\n          twoYearVals.push({ year: lastYear, index, value });\n          index++;\n        }\n      }\n\n      last12 = twoYearVals.slice(Math.max(twoYearVals.length - 12, 0));\n\n      // --- avg of the last 10 years means delete the first n values\n      //     where n=count of keys in werte-10\n      const years = Object.keys(station.werte);\n      const currentYear = new Date().getFullYear();\n\n      for (const year of years) {\n        if (year < currentYear - 10) {\n          delete avgs[year];\n        }\n      }\n\n      // ---create the chart objects\n\n      for (const entry of last12) {\n        const key = entry.year + \" \" + MONTHS[entry.index].shortname;\n        if (entry.value !== -9999) {\n          last12ChartData.push([key, entry.value]);\n          last12Colors.push(new Color(LOOKUP[getStatus4Value(entry.value)].color).fade(0.5));\n        } else {\n          last12ChartData.push([key, null]);\n          last12Colors.push(null);\n        }\n      }\n\n      for (const year of Object.keys(avgs)) {\n        avgsChartData.push([year, avgs[year]]);\n        avgsColors.push(new Color(LOOKUP[getStatus4Value(avgs[year])].color).fade(0.5));\n      }\n\n      for (const year of Object.keys(avgs)) {\n        avgsChartData.push([year, avgs[year]]);\n      }\n    }\n\n    const subSections = [];\n    const legend = (\n      <div style={{ fontSize: \"90%\", textAlign: \"center\" }}>\n        <div>\n          <span style={{ whiteSpace: \"nowrap\" }}>\n            <Icon style={{ color: LOOKUP.unauffaellig.color }} name='square' /> unauffällig{\" \"}\n            {\"(≦ 35)\"}\n          </span>\n          <span style={{ whiteSpace: \"nowrap\", marginLeft: 10, marginRight: 10 }}>\n            <Icon style={{ color: LOOKUP.auffaellig.color }} name='square' /> auffällig {\"(> 35)\"}\n          </span>\n          {windowSize?.width < 463 && <br />}\n          <span style={{ whiteSpace: \"nowrap\" }}>\n            <Icon style={{ color: LOOKUP.warnend.color }} name='square' /> warnend {\"(> 40)\"}\n          </span>\n        </div>\n        <div style={{ fontSize: \"80%\" }}> Messwerte in µg/m³</div>\n      </div>\n    );\n    if (station?.bis === undefined) {\n      subSections.push(\n        <SecondaryInfoPanelSection\n          key='last12'\n          bsStyle='info'\n          header={\"NO₂-Messwerte der letzten 12 Monate\"}\n        >\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            {legend}\n            <ColumnChart\n              data={[\n                {\n                  data: last12ChartData,\n                  library: {\n                    backgroundColor: last12Colors,\n                    borderColor: last12Colors,\n                    hoverBackgroundColor: last12Colors,\n                    hoverBorderColor: last12Colors,\n                    legend: {\n                      display: false,\n                      labels: {\n                        fontColor: \"rgb(255, 99, 132)\",\n                      },\n                    },\n                  },\n                },\n              ]}\n            />\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n\n    Chart.defaults.global.legend.display = false;\n    if (Object.keys(avgsChartData).length > 0) {\n      subSections.push(\n        <SecondaryInfoPanelSection\n          key='average10'\n          bsStyle='warning'\n          header={\"NO₂-Jahresmittelwerte der letzten zehn Kalenderjahre\"}\n        >\n          <div style={{ fontSize: \"115%\", padding: \"10px\", paddingTop: \"0px\" }}>\n            {legend}\n            <ColumnChart\n              data={[\n                {\n                  data: avgsChartData,\n                  library: {\n                    backgroundColor: avgsColors,\n                    borderColor: avgsColors,\n                    hoverBackgroundColor: avgsColors,\n                    hoverBorderColor: avgsColors,\n                  },\n                },\n              ]}\n            />\n            {/* <pre>{JSON.stringify(avgs, null, 2)}</pre> */}\n          </div>\n        </SecondaryInfoPanelSection>\n      );\n    }\n    let opendataLink = (\n      <a\n        href='https://offenedaten-wuppertal.de/dataset/luftmessstationen-wuppertal-passivsammler'\n        target='_opendata'\n      >\n        diesem Link\n      </a>\n    );\n\n    let stationsaktivitaet;\n    const twothousandandeight = new Date(\"2008-01-01\");\n\n    if (new Date(station?.bis) < twothousandandeight) {\n      //Fall 1\n      stationsaktivitaet = (\n        <div>\n          <b>Stationsaktivität:</b>\n          <p>\n            Von {new Date(station?.von).toLocaleDateString()} bis{\" \"}\n            {new Date(station?.bis).toLocaleDateString()} generierte diese Station NO₂-Messwerte.\n            {opendataLinkSections[0]}\n          </p>\n        </div>\n      );\n    } else if (\n      new Date(station?.von) < twothousandandeight &&\n      new Date(station?.bis) >= twothousandandeight\n    ) {\n      //Fall 2\n      stationsaktivitaet = (\n        <div>\n          <b>Stationsaktivität:</b>\n          <p>\n            Von {new Date(station?.von).toLocaleDateString()} bis{\" \"}\n            {new Date(station?.bis).toLocaleDateString()} generierte diese Station insgesamt{\" \"}\n            {valueCounter} NO₂-Messwerte (Ausfälle und Messwerte vor 1.1.2008 nicht berücksichtigt).\n            {opendataLinkSections[1]}\n          </p>\n        </div>\n      );\n    } else if (new Date(station?.von) >= twothousandandeight && station?.bis !== undefined) {\n      //Fall 3\n      stationsaktivitaet = (\n        <div>\n          <b>Stationsaktivität:</b>\n\n          <p>\n            Von {new Date(station?.von).toLocaleDateString()} bis{\" \"}\n            {new Date(station?.bis).toLocaleDateString()} generierte diese Station insgesamt{\" \"}\n            {valueCounter} NO₂-Messwerte (Ausfälle nicht berücksichtigt).\n            {opendataLinkSections[2]}\n          </p>\n\n          <b>Messausfälle:</b>\n          {outageCounter > 0 && (\n            <p>\n              Diese Messstation generierte an {outageCounter}{\" \"}\n              {outageCounter === 1 ? \"Monat\" : \"Monaten\"} einen Messausfall. Damit besitzt sie eine\n              Zuverlässigkeit von{\" \"}\n              {(\n                Math.round((valueCounter / (valueCounter + outageCounter)) * 1000) / 10\n              ).toLocaleString()}\n              %.\n            </p>\n          )}\n          {outageCounter === 0 && (\n            <p>\n              Diese Messstation lieferte in jedem Monat der Stationsaktivität einen NO₂-Messwert.\n              Damit liegt bisher kein Messausfall vor.\n            </p>\n          )}\n        </div>\n      );\n    } else if (new Date(station?.von) >= twothousandandeight && station?.bis === undefined) {\n      //Fall 3.5\n      stationsaktivitaet = (\n        <div>\n          <b>Stationsaktivität:</b>\n\n          <p>\n            Seit {new Date(station?.von).toLocaleDateString()} generierte diese Station{\" \"}\n            {valueCounter} NO₂-Messwerte (Ausfälle nicht berücksichtigt).\n            {opendataLinkSections[3]}\n          </p>\n\n          <b>Messausfälle:</b>\n          {outageCounter > 0 && (\n            <p>\n              Diese Messstation generierte an {outageCounter}{\" \"}\n              {outageCounter === 1 ? \"Monat\" : \"Monaten\"} einen Messausfall. Damit besitzt sie eine\n              Zuverlässigkeit von{\" \"}\n              {(\n                Math.round((valueCounter / (valueCounter + outageCounter)) * 1000) / 10\n              ).toLocaleString()}\n              %.\n            </p>\n          )}\n          {outageCounter === 0 && (\n            <p>\n              Diese Messstation lieferte in jedem Monat der Stationsaktivität einen NO₂-Messwert.\n              Damit liegt bisher kein Messausfall vor.\n            </p>\n          )}\n        </div>\n      );\n    } else if (new Date(station?.von) < twothousandandeight && station?.bis === undefined) {\n      //Fall 4\n      stationsaktivitaet = (\n        <div>\n          <b>Stationsaktivität:</b>\n          <p>\n            Seit {new Date(station?.von).toLocaleDateString()} generierte diese Station{\" \"}\n            {valueCounter} NO₂-Messwerte (Ausfälle und Messwerte vor 1.1.2008 nicht berücksichtigt).\n          </p>\n\n          {opendataLinkSections[1]}\n        </div>\n      );\n    } else {\n      //Fall 5\n      stationsaktivitaet = (\n        <div>\n          <b>Stationsaktivität:</b>\n\n          {station?.bis !== undefined && (\n            <p>\n              Von {new Date(station?.von).toLocaleDateString()} bis{\" \"}\n              {new Date(station?.bis).toLocaleDateString()} generierte diese Station insgesamt{\" \"}\n              {valueCounter} NO₂-Messwerte (Ausfälle nicht berücksichtigt).\n            </p>\n          )}\n          {station?.bis === undefined && (\n            <p>\n              Seit {new Date(station?.von).toLocaleDateString()} generierte diese Station{\" \"}\n              {valueCounter} NO₂-Messwerte (Ausfälle nicht berücksichtigt).\n            </p>\n          )}\n          <b>Messausfälle:</b>\n          {outageCounter > 0 && (\n            <p>\n              Diese Messstation generierte an {outageCounter}{\" \"}\n              {outageCounter === 1 ? \"Monat\" : \"Monaten\"} einen Messausfall. Damit besitzt sie eine\n              Zuverlässigkeit von{\" \"}\n              {(\n                Math.round((valueCounter / (valueCounter + outageCounter)) * 1000) / 10\n              ).toLocaleString()}\n              %.\n            </p>\n          )}\n          {outageCounter === 0 && (\n            <p>\n              Diese Messstation lieferte in jedem Monat der Stationsaktivität einen NO₂-Messwert.\n              Damit liegt bisher kein Messausfall vor.\n            </p>\n          )}\n          {opendataLinkSections[1]}\n        </div>\n      );\n    }\n\n    return (\n      <SecondaryInfo\n        titleIconName='info-circle'\n        title={\"Datenblatt: Messstation für Stickstoffdioxid (NO₂)\"}\n        mainSection={\n          <div style={{ width: \"100%\", minHeight: minHeight4MainSextion }}>\n            {foto !== undefined && (\n              <div\n                style={{\n                  textAlign: \"center\",\n                  float: windowSize?.width < 500 ? undefined : \"right\",\n                }}\n              >\n                <img\n                  alt='Bild'\n                  style={{\n                    paddingLeft: 10,\n                    paddingRight: 10,\n                    horizontalAlignment: \"center\",\n                    paddingBottom: \"5px\",\n                  }}\n                  src={foto}\n                  width='250'\n                />\n              </div>\n            )}\n            <div\n              style={{\n                fontSize: \"115%\",\n                padding: \"10px\",\n                paddingTop: \"0px\",\n              }}\n            >\n              <div>\n                <b>Adresse:</b>\n\n                <p>\n                  {station?.strasse} {station?.hausnummer}{\" \"}\n                  {station?.zusatzinfo && <span>({station?.zusatzinfo})</span>}\n                </p>\n                {stationsaktivitaet}\n              </div>\n            </div>\n          </div>\n        }\n        subSections={subSections}\n        footer={footer}\n      />\n    );\n  } else {\n    return null;\n  }\n};\nexport default InfoPanel;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport ContactButton from \"react-cismap/ContactButton\";\nimport {\n  FeatureCollectionContext,\n  FeatureCollectionDispatchContext,\n} from \"react-cismap/contexts/FeatureCollectionContextProvider\";\nimport FeatureCollection from \"react-cismap/FeatureCollection\";\nimport \"react-cismap/topicMaps.css\";\nimport GenericInfoBoxFromFeature from \"react-cismap/topicmaps/GenericInfoBoxFromFeature\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport \"./App.css\";\nimport { getGazData } from \"./helper/getGazData\";\nimport MyMenu from \"./Menu\";\nimport InfoPanel from \"./SecondaryInfo\";\n\nfunction Comp() {\n  const [gazData, setGazData] = useState([]);\n  const { setSelectedFeatureByPredicate } = useContext(FeatureCollectionDispatchContext);\n  // const { items, filteredItems, allFeatures } = useContext(FeatureCollectionContext);\n\n  // console.log(\"items\", items);\n  // console.log(\"filteredItems\", filteredItems);\n  // console.log(\"allFeatures\", allFeatures);\n\n  useEffect(() => {\n    getGazData(setGazData);\n    document.title = \"Luftmessstationskarte Wuppertal\";\n  }, []);\n\n  return (\n    <TopicMapComponent\n      locatorControl={true}\n      gazData={gazData}\n      modalMenu={<MyMenu />}\n      applicationMenuTooltipString={\"Filter | Einstellungen | Anleitung\"}\n      gazetteerSearchPlaceholder='Stadtteil | Adresse | POI'\n      infoBox={\n        <GenericInfoBoxFromFeature\n          pixelwidth={350}\n          config={{\n            displaySecondaryInfoAction: true,\n\n            city: \"Wuppertal\",\n            navigator: {\n              noun: {\n                singular: \"Messstation\",\n                plural: \"Messstationen\",\n              },\n            },\n            noCurrentFeatureTitle: \"Keine Messtationen gefunden\",\n            noCurrentFeatureContent: \"\",\n          }}\n        />\n      }\n      secondaryInfo={<InfoPanel />}\n      gazetteerHitTrigger={(hits) => {\n        if (Array.isArray(hits) && hits[0]?.more?.mid) {\n          setSelectedFeatureByPredicate((feature) => feature.properties.id === hits[0].more.mid);\n        }\n      }}\n    >\n      <ContactButton\n        title='Rückfrage zu den Messwerten'\n        action={() => {\n          let link = document.createElement(\"a\");\n          link.setAttribute(\"type\", \"hidden\");\n          const br = \"\\n\";\n\n          let mailToHref =\n            \"mailto:luftreinhaltung@stadt.wuppertal.de?subject=Rückfrage zu Messwerten&body=\" +\n            encodeURI(`Sehr geehrte Damen und Herren,${br}${br} zu der Luftmessstationskarte `) +\n            encodeURI(`auf${br}${br}`) +\n            `${window.location.href.replace(/&/g, \"%26\").replace(/#/g, \"%23\")}` +\n            encodeURI(\n              `${br}` +\n                `${br}` +\n                `habe ich folgende Frage:${br}` +\n                `${br}${br}${br}${br}` +\n                `Mit freundlichen Grüßen${br}` +\n                `${br}` +\n                `${br}`\n            );\n          document.body.appendChild(link);\n          link.href = mailToHref;\n          link.click();\n        }}\n      />\n      <FeatureCollection></FeatureCollection>\n      {/* <LogSelection /> */}\n    </TopicMapComponent>\n  );\n}\n\nexport default Comp;\n","import React, { useContext, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"react-cismap/topicMaps.css\";\nimport TopicMapContextProvider from \"react-cismap/contexts/TopicMapContextProvider\";\nimport TopicMapComponent from \"react-cismap/topicmaps/TopicMapComponent\";\nimport FeatureCollection from \"react-cismap/FeatureCollection\";\nimport GenericInfoBoxFromFeature from \"react-cismap/topicmaps/GenericInfoBoxFromFeature\";\n\nimport getGTMFeatureStyler from \"react-cismap/topicmaps/generic/GTMStyler\";\nimport ContactButton from \"react-cismap/ContactButton\";\nimport convertItemToFeature, { getStatus } from \"./helper/convertItemToFeature\";\n\nimport { getClusterIconCreatorFunction } from \"react-cismap/tools/uiHelper\";\nimport MyMenu from \"./Menu\";\nimport LogSelection from \"./helper/LogSelectedFeature\";\nimport UWZ from \"./Umweltzonenlayer\";\nimport itemFilterFunction from \"./helper/filterFunction\";\nimport { LOOKUP } from \"./helper/constants\";\nimport { getGazData } from \"./helper/getGazData\";\nimport titleFactory from \"./helper/titleFactory\";\nimport InfoPanel from \"./SecondaryInfo\";\nimport { MappingConstants } from \"react-cismap\";\nimport Luftmessstationskarte from \"./Luftmessstationskarte\";\nfunction App() {\n  const [gazData, setGazData] = useState([]);\n  useEffect(() => {\n    getGazData(setGazData);\n    document.title = \"Luftmessstationskarte Wuppertal\";\n  }, []);\n\n  return (\n    <TopicMapContextProvider\n      appKey='LuftmessstationenWuppertal.TopicMap'\n      featureItemsURL={\"https://wupp-topicmaps-data.cismet.de/data/no2.data.json\"}\n      // featureItemsURL={\"/data/no2.data.json\"} //for dev purpose only\n      referenceSystemDefinition={MappingConstants.proj4crs25832def}\n      mapEPSGCode='25832'\n      referenceSystem={MappingConstants.crs25832}\n      getFeatureStyler={getGTMFeatureStyler}\n      featureTooltipFunction={(feature) => feature?.text}\n      convertItemToFeature={convertItemToFeature}\n      clusteringOptions={{\n        iconCreateFunction: getClusterIconCreatorFunction(30, (props) => props.color),\n      }}\n      additionalLayerConfiguration={{\n        uwz: {\n          title: \"Umweltzone\",\n          initialActive: true,\n          layer: <UWZ />,\n        },\n      }}\n      filterState={{\n        stations: [\"unauffaellig\", \"auffaellig\", \"warnend\", \"inaktiv\", \"abgebaut\"],\n      }}\n      titleFactory={titleFactory}\n      itemFilterFunction={itemFilterFunction}\n      classKeyFunction={(item) => LOOKUP[getStatus(item)].title}\n      getColorFromProperties={(item) => LOOKUP[getStatus(item)].color}\n    >\n      <Luftmessstationskarte />\n    </TopicMapContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}